version: "3.9"
services:
  mongodb:
    image: mongo:4.4
    hostname: mongodb
    restart: unless-stopped
    container_name: mongodb
    ports:
      - 27017:27017
    networks:
      - test-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    # network_mode: host
    healthcheck:
      test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo -u root -p password --quiet) -eq 1
      interval: 10s
      start_period: 30s
    entrypoint:
      - bash
      - -c
      - |
        cp /data/file.key.devel /data/file.key
        chmod 400 /data/file.key
        chown 999:999 /data/file.key
        exec docker-entrypoint.sh $$@
    command: "mongod --replSet dbrs --bind_ip_all --keyFile /data/file.key"
    volumes:
      - "./scripts/file.key:/data/file.key.devel"
      - "./mongors/data:/data/db"

  es7:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.0
    logging:
      driver: none
    container_name: es
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms5g -Xmx5g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - test-network
    healthcheck:
      test: "curl --fail http://localhost:9200 || exit 1"
      interval: 2s
      timeout: 60s
      retries: 300
    restart: unless-stopped

  monstache:
    image: rwynn/monstache:latest
    container_name: monstache
    depends_on:
      - es7
      - mongodb
    working_dir: /monstache
    command: -f ./config.toml
    volumes:
      - ./monstache:/monstache/
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - test-network
networks:
  test-network:
    driver: bridge
